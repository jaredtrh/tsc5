#include "imports/stdlib.fc";

(slice, cell, int) load_data() inline {
    slice ds = get_data().begin_parse();
    return (ds~load_msg_addr(), ds~load_dict(256), ds.preload_uint(32));
}

() store_data(slice admin_address, cell users, int total_share) impure inline {
    save_data(
        begin_cell()
            .store_slice(admin_address)
            .store_dict(users)
            .store_uint(total_share)
            .end_cell()
    );
}

() recv_internal(cell in_msg, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    int op = in_msg_body~load_uint(32);
    if (op == 0x368ddef3) {

    }
}

cell get_users() method_id {
    slice ds = get_data().begin_parse();
    ds~load_msg_addr();
    return ds.preload_dict();
}

int get_user_share(slice user_address) method_id {
    return get_users().dict_get(256, user_address).first();
}